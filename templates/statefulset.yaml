apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: keycloak
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keycloak
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version}}
  name: keycloak
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  podManagementPolicy: Parallel
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  selector:
    matchLabels:
      app.kubernetes.io/component: keycloak
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: keycloak
  serviceName: keycloak-headless
  template:
    metadata:
      annotations:
        checksum/configmap-env-vars: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        app.kubernetes.io/component: keycloak
        app.kubernetes.io/instance: keycloak
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: keycloak
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version}}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: keycloak
                  app.kubernetes.io/name: keycloak
              topologyKey: kubernetes.io/hostname
            weight: 1
      automountServiceAccountToken: true
      initContainers:
      - command:
        - /bin/bash
        image: keycloak/keycloak:{{ default "latest" .Values.image.tag }}
        imagePullPolicy: IfNotPresent
        name: prepare-write-dirs
        args:
        - '-ec'
        - |
          echo "starting the Copy operation"
          # In order to not break the application functionality we need to make some
          # directories writable, so we need to copy it to an empty dir volume
          cp -r --preserve=mode,timestamps /opt/keycloak/lib/quarkus /emptydir/app-quarkus-dir
          cp -r --preserve=mode,timestamps /opt/keycloak/conf /emptydir/app-conf-dir
          cp -r --preserve=mode,timestamps /opt/keycloak/data /emptydir/app-data-dir
          cp -r --preserve=mode,timestamps /opt/keycloak/providers /emptydir/app-providers-dir
          cp -r --preserve=mode,timestamps /opt/keycloak/themes /emptydir/app-themes-dir

          echo "Copy operation completed"
        resources:
          limits:
            cpu: 750m
            ephemeral-storage: 2Gi
            memory: 768Mi
          requests:
            cpu: 500m
            ephemeral-storage: 50Mi
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
          - mountPath: /emptydir
            name: empty-dir
      {{- if .Values.initContainers }}
      {{- toYaml .Values.initContainers | nindent 6 -}}
      {{- end }}
      containers:
      {{- if .Values.sidecars -}}
      {{ toYaml .Values.sidecars | nindent 6 -}}
      {{- end }}
      - name: keycloak
        image: keycloak/keycloak:{{ default "latest" .Values.image.tag }}
        imagePullPolicy: IfNotPresent
        args: 
        - "start"
        - "--import-realm"
        - --spi-authenticator-allow-ban-check-authenticator-dbpath=/opt/keycloak/allowbans
        - --spi-theme-welcome-theme=keycloak-welcome-theme
        envFrom:
        - configMapRef:
            name: keycloak-env-vars
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KC_PROXY_HEADERS
          value: xforwarded
        - name: KC_HTTP_ENABLED
          value: 'true'
        - name: KC_HOSTNAME_STRICT
          value: 'false'
        - name: KC_HEALTH_ENABLED
          value: 'true'
        - name: JAVA_OPTS_APPEND
          value: '-Djgroups.bind.address=$(POD_IP)'
        - name: KC_BOOTSTRAP_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-admin-creds
              key: password
              optional: false
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.db.existingSecret }}
              key: {{ .Values.db.existingSecretPasswordKey }}
              optional: false
        {{- if .Values.extraEnvVars -}}
        {{ toYaml .Values.extraEnvVars | nindent 8 -}}
        {{- end }}
        ports:
          - name: http
            containerPort: 8080
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 300
          periodSeconds: 1
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 5
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9000
          name: metrics
          protocol: TCP
        - containerPort: 7800
          name: discovery
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /realms/master
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            ephemeral-storage: {{ .Values.resources.requests.ephemeralStorage }}
            memory: {{ .Values.resources.requests.memory }}
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            ephemeral-storage: {{ .Values.resources.limits.ephemeralStorage }}
            memory: {{ .Values.resources.limits.memory }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /tmp
          name: empty-dir
          subPath: tmp-dir
        - mountPath: /keycloak
          name: empty-dir
          subPath: app-volume-dir
        - mountPath: /opt/keycloak/conf
          name: empty-dir
          subPath: app-conf-dir
        - mountPath: /opt/keycloak/lib/quarkus
          name: empty-dir
          subPath: app-quarkus-dir
        - mountPath: /opt/keycloak/data
          name: empty-dir
          subPath: app-data-dir
        - mountPath: /opt/keycloak/providers
          name: empty-dir
          subPath: app-providers-dir
        - mountPath: /opt/keycloak/themes
          name: empty-dir
          subPath: app-themes-dir
        {{- if .Values.extraVolumeMounts -}}
        {{ toYaml .Values.extraVolumeMounts | nindent 8 -}}
        {{- end }}
      {{ if .Values.global.imagePullSecrets }}
      imagePullSecrets:
      - name: regcred-keycloak
      {{- end }}
      restartPolicy: Always
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
      serviceAccount: keycloak
      serviceAccountName: keycloak
      volumes:
      - name: empty-dir
        emptyDir: {}
      {{- if .Values.extraVolumes -}}
      {{ toYaml .Values.extraVolumes | nindent 6 -}}
      {{- end }}
